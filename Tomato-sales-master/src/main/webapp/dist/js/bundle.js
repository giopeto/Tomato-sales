var ngApp=angular.module("ngApp",["ngRoute","ngResource"]);ngApp.config(function($controllerProvider,$compileProvider,$filterProvider,$provide,$routeProvider,$httpProvider){$httpProvider.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",ngApp.lazy={controller:$controllerProvider.register,directive:$compileProvider.directive,filter:$filterProvider.register,factory:$provide.factory,service:$provide.service},$routeProvider.when("/tomato-sales",{templateUrl:"app/tomato-sales/tomato-sales.html",resolve:{load:["$q","$rootScope",function($q,$rootScope){var deferred=$q.defer();return require(["dist/js/tomato-sales/tomato-sales.controller.min.js","dist/js/tomato-sales/tomato-sales.service.min.js"],function(){$rootScope.$apply(function(){deferred.resolve()},function(err){console.log("RouteProvider resolve error: ",err)})}),deferred.promise}]}}),$routeProvider.otherwise({redirectTo:"/tomato-sales"})});
ngApp.lazy.controller("tomatoSalesCtrl",function($scope,$http,$log,TomatoFactory){function get(args){(!args.size||"number"==typeof args.size&&args.size%1==0)&&(vm.isLoading=!0,vm.tomatoes=TomatoFactory.query({size:args.size},function(){vm.isLoading=!1},function(error){vm.isLoading=!1,$log.log("Error: ",error)}))}var vm=this;vm.get=get,vm.tomatoes=[],vm.isLoading=!1});
ngApp.lazy.factory("TomatoFactory",function($resource){return $resource("tomatoes/data?size=:size",{size:"@size"},{update:{method:"PUT"}})});